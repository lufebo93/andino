/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.andino.vistas.farmacia;




import ec.com.andino.accesodatos.Conexion;
import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author lufeb
 */
public final class frmReceta extends javax.swing.JFrame {
    DefaultTableModel modelo;
    TableRowSorter trsFiltro;
    /**
     * Creates new form frm
     * @throws java.io.IOException
     * @throws java.sql.SQLException
     */
    public frmReceta() throws IOException, SQLException {
       initComponents();
       setIconImage(new ImageIcon(getClass().getResource("/ec/com/andino/imagenes/icono.png")).getImage());
       setLocationRelativeTo(null);
       this.setDefaultCloseOperation(frmProducto.DISPOSE_ON_CLOSE);
       JRootPane boton = SwingUtilities.getRootPane(btnGuardarReceta); 
       boton.setDefaultButton(btnGuardarReceta);
       spinValor.setEnabled(false);
       spinDescuento.setEnabled(false);
       txtTotal.setEnabled(false);
       areaObservacion.setEnabled(false);
       
       txtCodEmpleado.setVisible(false);
       txtCodAgenda.setVisible(false);
       
       cargarTabla();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel44 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        spinDescuento = new javax.swing.JSpinner();
        spinValor = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaObservacion = new javax.swing.JTextArea();
        txtCodEmpleado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMedico = new javax.swing.JTextField();
        lblPac = new javax.swing.JTextField();
        lblFecha = new javax.swing.JTextField();
        lblHora = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnGuardarReceta = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        txtBusquedaEmpleado = new javax.swing.JTextField();
        btnActualizarCredencial = new javax.swing.JButton();
        cmbFiltroEmpleado = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCodAgenda = new javax.swing.JTextField();

        jLabel44.setText("Bienvenido");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("HU.ANDINO :: Receta");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo receta"));

        jLabel6.setText("Valor");

        jLabel7.setText("Descuento");

        jLabel8.setText("Total");

        jLabel9.setText("Observación");

        spinDescuento.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        spinValor.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));

        areaObservacion.setColumns(20);
        areaObservacion.setLineWrap(true);
        areaObservacion.setRows(5);
        areaObservacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                areaObservacionFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(areaObservacion);

        txtCodEmpleado.setEditable(false);

        jLabel1.setText("Paciente");

        jLabel4.setText("Fecha");

        jLabel2.setText("Hora");

        jLabel3.setText("Médico");

        lblMedico.setEditable(false);

        lblPac.setEditable(false);

        lblFecha.setEditable(false);

        lblHora.setEditable(false);

        txtTotal.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMedico)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHora, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinValor, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93))
                            .addComponent(lblPac)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtTotal))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spinValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnGuardarReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/andino/imagenes/guardar_256px-2.png"))); // NOI18N
        btnGuardarReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarRecetaMouseEntered(evt);
            }
        });
        btnGuardarReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarRecetaActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("RECETA");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Agenda - Empleado"));

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaEmpleados);

        txtBusquedaEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaEmpleadoKeyTyped(evt);
            }
        });

        btnActualizarCredencial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/andino/imagenes/refresh-0.png"))); // NOI18N
        btnActualizarCredencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCredencialActionPerformed(evt);
            }
        });

        cmbFiltroEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Paciente", "Hora" }));

        jLabel5.setText("Buscar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFiltroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusquedaEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizarCredencial, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnActualizarCredencial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBusquedaEmpleado)
                        .addComponent(cmbFiltroEmpleado)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtCodAgenda.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(btnGuardarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtCodAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardarReceta)
                        .addGap(5, 5, 5))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cargarTabla() throws SQLException, IOException{
        Conexion con = new Conexion();
        con.conectar();
        ResultSet rs = null;
        
        modelo = new DefaultTableModel();
        modelo.addColumn("C.Agenda");
        modelo.addColumn("C.Usuario");
        modelo.addColumn("Usuario");
        modelo.addColumn("C.Paciente");
        modelo.addColumn("Paciente");
        modelo.addColumn("C.Empleado");
        modelo.addColumn("Empleado");
        modelo.addColumn("Fecha");
        modelo.addColumn("Hora");
        
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"agenda.\"idagenda\",\n" +                    
"agenda.\"idusuario\",\n" +
"usuario.\"usuario\",\n" +
"agenda.\"idpaciente\",\n" +
"concat(paciente.\"nombre\",' ',paciente.\"apellido\") as paciente,\n" +
"agenda.\"idempleado\",\n" +
"concat(empleado.\"nombre\",' ',empleado.\"apellido\") as empleado,\n" +
"agenda.\"fecha\",\n" +
"agenda.\"hora\"\n" +
"FROM public.\"agenda\" agenda INNER JOIN public.\"usuario\" usuario ON\n" +
"agenda.\"idusuario\"=usuario.\"idusuario\" INNER JOIN public.\"paciente\" paciente ON\n" +
"agenda.\"idpaciente\"=paciente.\"idpaciente\" INNER JOIN public.\"empleado\" empleado ON\n" +
"agenda.\"idempleado\"=empleado.\"idempleado\";");
                ResultSetMetaData md = rs.getMetaData();
                int columnCount = md.getColumnCount();
                String[] cols = new String[columnCount];
                for (int i=1;i<= columnCount;i++){
                    cols[i-1] = md.getColumnName(i);
                }
                while (rs.next()){
                    Object[] row = new Object[columnCount];
                    for (int i = 1 ; i <= columnCount ; i++){
                        row[i-1] = rs.getObject(i);
                    }
                    modelo.addRow(row);
                }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "HU.ANDINO", JOptionPane.INFORMATION_MESSAGE);
        }finally {
            con.desconectar();
            rs.close();
        }
        tablaEmpleados.setModel(modelo);
        modelo.fireTableDataChanged();
        
        
        tablaEmpleados.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaEmpleados.getColumnModel().getColumn(0).setMinWidth(0);
        tablaEmpleados.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        tablaEmpleados.getColumnModel().getColumn(1).setMaxWidth(0);
        tablaEmpleados.getColumnModel().getColumn(1).setMinWidth(0);
        tablaEmpleados.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        tablaEmpleados.getColumnModel().getColumn(3).setMaxWidth(0);
        tablaEmpleados.getColumnModel().getColumn(3).setMinWidth(0);
        tablaEmpleados.getColumnModel().getColumn(3).setPreferredWidth(0);
        
        tablaEmpleados.getColumnModel().getColumn(5).setMaxWidth(0);
        tablaEmpleados.getColumnModel().getColumn(5).setMinWidth(0);
        tablaEmpleados.getColumnModel().getColumn(5).setPreferredWidth(0);
    }
    
    public void filtro() {
        int columnaABuscar = 0;
        if (cmbFiltroEmpleado.getSelectedItem() == "Paciente") {
            columnaABuscar = 4;
        }
        if (cmbFiltroEmpleado.getSelectedItem() == "Hora") {
            columnaABuscar = 8;
        }
        String replace = txtBusquedaEmpleado.getText();
        replace = replace.replace("e", "(é)");
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i).*"+replace+".*", columnaABuscar));
        tablaEmpleados.setRowSorter(trsFiltro);
    }
    
    private void btnGuardarRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarRecetaMouseEntered
        btnGuardarReceta.setToolTipText("Guardar");
    }//GEN-LAST:event_btnGuardarRecetaMouseEntered

    private void btnGuardarRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarRecetaActionPerformed
        Conexion con= new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (JOptionPane.showConfirmDialog(null, "¿Esta usted seguro?", "HU.ANDINO",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if(lblMedico.getText().equals("")||spinValor.getValue().equals(0)
                    ||txtTotal.getText().equals("")||areaObservacion.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Debe ingresar toda la información",
                    "HU.ANDINO", JOptionPane.INFORMATION_MESSAGE);
            }else{
                try{
                    String insertarCategoria="INSERT INTO public.receta(\n" +
"	idempleado, idagenda, valor, descuento, total, observacion)\n" +
"	VALUES (?, ?, ?, ?, ?, ?);";
                    try (PreparedStatement ps = con.conectar().prepareStatement(insertarCategoria)) {
                        ps.setInt(1, Integer.parseInt(txtCodEmpleado.getText()));
                        ps.setInt(2, Integer.parseInt(txtCodAgenda.getText()));
                        ps.setDouble(3, Double.parseDouble(spinValor.getValue().toString()));
                        ps.setDouble(4, Double.parseDouble(spinDescuento.getValue().toString()));
                        ps.setDouble(5, Double.parseDouble(txtTotal.getText()));
                        ps.setString(6, areaObservacion.getText());

                        ps.execute();
                        ps.close();
                    } catch (IOException ex) {
                        Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }catch(SQLException | NumberFormatException | HeadlessException x){
                    JOptionPane.showMessageDialog(rootPane, "Error al guardar la información "+x);
                }finally {
                    con.desconectar();
                }
                lblMedico.setText("");
                lblPac.setText("");
                lblFecha.setText("");
                lblHora.setText("");
                spinValor.setValue(0);
                spinDescuento.setValue(0);
                txtTotal.setText("");
                areaObservacion.setText("");
                btnGuardarReceta.setEnabled(false);
                JOptionPane.showMessageDialog(rootPane,"Guardado correctamente");
            }
        }
    }//GEN-LAST:event_btnGuardarRecetaActionPerformed

    private void tablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadosMouseClicked
        int selectedRowIndex = tablaEmpleados.rowAtPoint(evt.getPoint());
        lblMedico.setText(tablaEmpleados.getValueAt(selectedRowIndex, 6).toString());
        lblPac.setText(tablaEmpleados.getValueAt(selectedRowIndex, 4).toString());
        lblFecha.setText(tablaEmpleados.getValueAt(selectedRowIndex, 7).toString());
        lblHora.setText(tablaEmpleados.getValueAt(selectedRowIndex, 8).toString());
        txtCodEmpleado.setText(tablaEmpleados.getValueAt(selectedRowIndex, 5).toString());
        txtCodAgenda.setText(tablaEmpleados.getValueAt(selectedRowIndex, 0).toString());
        
        spinValor.setEnabled(true);
        spinDescuento.setEnabled(true);
        txtTotal.setEnabled(true);
        areaObservacion.setEnabled(true);
        btnGuardarReceta.setEnabled(true);
    }//GEN-LAST:event_tablaEmpleadosMouseClicked

    private void txtBusquedaEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaEmpleadoKeyTyped
        txtBusquedaEmpleado.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBusquedaEmpleado.getText());
                txtBusquedaEmpleado.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tablaEmpleados.getModel());
        tablaEmpleados.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBusquedaEmpleadoKeyTyped

    private void btnActualizarCredencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCredencialActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        modelo.setRowCount( 0 );
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"agenda.\"idagenda\",\n" +                    
"agenda.\"idusuario\",\n" +
"usuario.\"usuario\",\n" +
"agenda.\"idpaciente\",\n" +
"concat(paciente.\"nombre\",' ',paciente.\"apellido\") as paciente,\n" +
"agenda.\"idempleado\",\n" +
"concat(empleado.\"nombre\",' ',empleado.\"apellido\") as empleado,\n" +
"agenda.\"fecha\",\n" +
"agenda.\"hora\"\n" +
"FROM public.\"agenda\" agenda INNER JOIN public.\"usuario\" usuario ON\n" +
"agenda.\"idusuario\"=usuario.\"idusuario\" INNER JOIN public.\"paciente\" paciente ON\n" +
"agenda.\"idpaciente\"=paciente.\"idpaciente\" INNER JOIN public.\"empleado\" empleado ON\n" +
"agenda.\"idempleado\"=empleado.\"idempleado\";");
                ResultSetMetaData md = rs.getMetaData();
                int columnCount = md.getColumnCount();
                String[] cols = new String[columnCount];
                for (int i=1;i<= columnCount;i++){
                    cols[i-1] = md.getColumnName(i);
                }
                while (rs.next()){
                    Object[] row = new Object[columnCount];
                    for (int i = 1 ; i <= columnCount ; i++){
                        row[i-1] = rs.getObject(i);
                    }
                    modelo.addRow(row);
                }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "HU.ANDINO", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnActualizarCredencialActionPerformed

    private void areaObservacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaObservacionFocusGained
        int desc = Integer.parseInt(spinDescuento.getValue().toString());
        double valor = Double.parseDouble(spinValor.getValue().toString());
        DecimalFormat f = new DecimalFormat("###.00");
        if(desc>0){
            double calc = (valor*desc)/100;
            double total = valor-calc;
            txtTotal.setText(String.valueOf(f.format(total)));
        }else{
            txtTotal.setText(String.valueOf(f.format(valor)));
        }
    }//GEN-LAST:event_areaObservacionFocusGained

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaObservacion;
    private javax.swing.JButton btnActualizarCredencial;
    private javax.swing.JButton btnGuardarReceta;
    private javax.swing.JComboBox<String> cmbFiltroEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lblFecha;
    private javax.swing.JTextField lblHora;
    private javax.swing.JTextField lblMedico;
    private javax.swing.JTextField lblPac;
    private javax.swing.JSpinner spinDescuento;
    private javax.swing.JSpinner spinValor;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JTextField txtBusquedaEmpleado;
    private javax.swing.JTextField txtCodAgenda;
    private javax.swing.JTextField txtCodEmpleado;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
