/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.andino.vistas.farmacia;




import ec.com.andino.accesodatos.Conexion;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author lufeb
 */
public final class frmModificarProducto extends javax.swing.JFrame {
    JLabel img;
    JButton open;
    JFileChooser jf=new JFileChooser();
    FileInputStream fis;
    int longitudBytes;
    TableRowSorter trsFiltro;
    DefaultTableModel modelo;
    public static int codigo;
    public static String nombreFarmaceutico;
    public static String categoria;
    
    /**
     * Creates new form frm
     * @throws java.io.IOException
     * @throws java.sql.SQLException
     */
    public frmModificarProducto() throws IOException, SQLException {
        initComponents();
        consultar_tipoProducto();
        consultar_Proveedor();
        cargarTabla();
        txtCodProducto.setVisible(false);
        txtCodProveedor.setVisible(false);
        txtCodProducto.setVisible(false);
        setIconImage(new ImageIcon(getClass().getResource("/ec/com/andino/imagenes/icono.png")).getImage());
        setLocationRelativeTo(null);
        this.setDefaultCloseOperation(frmModificarProducto.DISPOSE_ON_CLOSE);
        JRootPane boton = SwingUtilities.getRootPane(btnGuardarProducto); 
        boton.setDefaultButton(btnGuardarProducto);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel44 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        cmbTipoProducto = new javax.swing.JComboBox<>();
        cmbMedida = new javax.swing.JComboBox<>();
        spinCantidad = new javax.swing.JSpinner();
        spinConcentracion = new javax.swing.JSpinner();
        cmbProveedor = new javax.swing.JComboBox<>();
        txtCodTipoProducto = new javax.swing.JTextField();
        txtCodProveedor = new javax.swing.JTextField();
        spinCostoProveedor = new javax.swing.JSpinner();
        spinValorPvp = new javax.swing.JSpinner();
        txtProducto = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        txtPropiedad = new javax.swing.JTextField();
        btnGuardarProducto = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaPaciente = new javax.swing.JTable();
        jLabel46 = new javax.swing.JLabel();
        cmbListarPac = new javax.swing.JComboBox<>();
        txtBusquedaPac = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        txtCodProducto = new javax.swing.JTextField();

        jLabel44.setText("Bienvenido");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HE.ANDINO :: Insertar producto");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Producto"));

        jLabel2.setText("N. Comerical");

        jLabel6.setText("T.Producto");

        jLabel7.setText("Cantidad");

        jLabel8.setText("Proveedor");

        jLabel9.setText("V.Proveedor");

        jLabel10.setText("pvp");

        jLabel11.setText("Propiedad");

        txtNombreComercial.setEnabled(false);
        txtNombreComercial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreComercialFocusLost(evt);
            }
        });

        cmbTipoProducto.setEnabled(false);
        cmbTipoProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoProductoItemStateChanged(evt);
            }
        });

        cmbMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "mg", "ug", "g", "L", "ml", "cc", "ugotas" }));
        cmbMedida.setEnabled(false);

        spinCantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinCantidad.setEnabled(false);

        spinConcentracion.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinConcentracion.setEnabled(false);

        cmbProveedor.setEnabled(false);
        cmbProveedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProveedorItemStateChanged(evt);
            }
        });

        txtCodTipoProducto.setEditable(false);

        txtCodProveedor.setEditable(false);

        spinCostoProveedor.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        spinCostoProveedor.setEnabled(false);

        spinValorPvp.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        spinValorPvp.setEnabled(false);

        txtProducto.setEditable(false);

        txtProveedor.setEditable(false);

        txtPropiedad.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinConcentracion, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(spinCantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinCostoProveedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinValorPvp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(20, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCodTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCodProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel11))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinConcentracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spinCostoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(spinValorPvp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnGuardarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/andino/imagenes/guardar_256px-2.png"))); // NOI18N
        btnGuardarProducto.setEnabled(false);
        btnGuardarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarProductoMouseEntered(evt);
            }
        });
        btnGuardarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductoActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Productos"));

        tablaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPaciente.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPacienteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaPaciente);

        jLabel46.setText("Buscar por:");

        cmbListarPac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Tipo", "Proveedor", "Producto" }));

        txtBusquedaPac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaPacKeyTyped(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/andino/imagenes/refresh-0.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbListarPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusquedaPac, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefresh)
                    .addComponent(txtBusquedaPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbListarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel46)))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtCodProducto.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(btnGuardarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(txtCodProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGuardarProducto))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(txtCodProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void abrirarchivo(String archivo){
         try {
            File objetofile = new File (archivo);
            Desktop.getDesktop().open(objetofile);
         }catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error "+ex,
                    "HE.ANDINO", JOptionPane.INFORMATION_MESSAGE);
         }
    }
    
    public void consultar_tipoProducto() throws SQLException, IOException{
        Conexion con= new Conexion();
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT nombre FROM public.tipoproducto order by nombre asc";
        try {
           pst=con.conectar().prepareStatement(sql);
           rs = pst.executeQuery();
           cmbTipoProducto.addItem("Seleccione");
           while(rs.next()){
               cmbTipoProducto.addItem(rs.getString("nombre"));
           }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener los datos",
                    "HE.ANDINO", JOptionPane.ERROR_MESSAGE);
        }finally{
            con.desconectar();
            rs.close();
        }
    }
    
    public void consultar_Proveedor() throws SQLException, IOException{
        Conexion con= new Conexion();
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT nombre FROM public.proveedor order by nombre asc";
        try {
           pst=con.conectar().prepareStatement(sql);
           rs = pst.executeQuery();
           cmbProveedor.addItem("Seleccione");
           while(rs.next()){
               cmbProveedor.addItem(rs.getString("nombre"));
           }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener los datos",
                    "HE.ANDINO", JOptionPane.ERROR_MESSAGE);
        }finally{
            con.desconectar();
            rs.close();
        }
    }
    
    public void cargarTabla() throws IOException, SQLException{
        Conexion con = new Conexion();
        con.conectar();
        ResultSet rs = null;
        
        modelo = new DefaultTableModel();
        modelo.addColumn("C.Producto");
        modelo.addColumn("T.Producto");
        modelo.addColumn("Tipo");
        modelo.addColumn("C.Proveedor");
        modelo.addColumn("Proveedor");
        modelo.addColumn("Nombre");
        modelo.addColumn("Propiedad");
        modelo.addColumn("pvp");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Costo");
        
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"producto.\"idproducto\", \n" +                    
"producto.\"idtipoproducto\", \n" +
"tipo.\"nombre\",\n" +
"producto.\"idproveedor\", \n" +
"proveedor.\"nombre\",\n" +
"producto.\"nombre\", \n" +
"producto.\"propiedad\", \n" +
"producto.\"pvp\", \n" +
"producto.\"cantidad\", \n" +
"producto.\"costo\"\n" +
"FROM public.\"producto\" producto INNER JOIN public.\"tipoproducto\" tipo ON\n" +
"producto.\"idtipoproducto\"=tipo.\"idtipoproducto\" INNER JOIN public.\"proveedor\" proveedor ON\n" +
"producto.\"idproveedor\"=proveedor.\"idproveedor\"");
                ResultSetMetaData md = rs.getMetaData();
                int columnCount = md.getColumnCount();
                String[] cols = new String[columnCount];
                for (int i=1;i<= columnCount;i++){
                    cols[i-1] = md.getColumnName(i);
                }
                while (rs.next()){
                    Object[] row = new Object[columnCount];
                    for (int i = 1 ; i <= columnCount ; i++){
                        row[i-1] = rs.getObject(i);
                    }
                    modelo.addRow(row);
                }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "HE.ANDINO", JOptionPane.INFORMATION_MESSAGE);
        }finally {
            con.desconectar();
            rs.close();
        }
        tablaPaciente.setModel(modelo);
        modelo.fireTableDataChanged();
        
//        tablaPaciente.getColumnModel().getColumn(0).setMaxWidth(0);
//        tablaPaciente.getColumnModel().getColumn(0).setMinWidth(0);
//        tablaPaciente.getColumnModel().getColumn(0).setPreferredWidth(0);
//        
//        tablaPaciente.getColumnModel().getColumn(2).setMaxWidth(0);
//        tablaPaciente.getColumnModel().getColumn(2).setMinWidth(0);
//        tablaPaciente.getColumnModel().getColumn(2).setPreferredWidth(0);
    }
    
    public void filtro() {
        int columnaABuscar = 0;
        if (cmbListarPac.getSelectedItem() == "Tipo") {
            columnaABuscar = 2;
        }
        if (cmbListarPac.getSelectedItem() == "Proveedor") {
            columnaABuscar = 4;
        }
        if (cmbListarPac.getSelectedItem() == "Producto") {
            columnaABuscar = 5;
        }
        String replace = txtBusquedaPac.getText();
        replace = replace.replace("e", "(é)");
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i).*"+replace+".*", columnaABuscar));
        tablaPaciente.setRowSorter(trsFiltro);
    }
    
    private void btnGuardarProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarProductoMouseEntered
        btnGuardarProducto.setToolTipText("Guardar");
    }//GEN-LAST:event_btnGuardarProductoMouseEntered

    private void btnGuardarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductoActionPerformed
        Conexion con= new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (JOptionPane.showConfirmDialog(null, "¿Esta usted seguro?", "HE.ANDINO",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if(txtProducto.getText().equals("Servicio")){
                if(txtNombreComercial.getText().equals("")||txtCodTipoProducto.getText().equals("")
                    ||txtCodProveedor.getText().equals("")||spinValorPvp.getValue().equals(0)){
                JOptionPane.showMessageDialog(this, "Debe ingresar toda la información",
                    "HE.ANDINO", JOptionPane.INFORMATION_MESSAGE);
            }else{
                try{
                    String insertarCategoria="UPDATE public.producto\n" +
"	SET idtipoproducto=?, idproveedor=?, nombre=?, pvp=?\n" +
"	WHERE idproducto=?;";
                    try (PreparedStatement ps = con.conectar().prepareStatement(insertarCategoria)) {
                        ps.setInt(1, Integer.parseInt(txtCodTipoProducto.getText()));
                        ps.setInt(2, Integer.parseInt(txtCodProveedor.getText()));
                        ps.setString(3, txtNombreComercial.getText());
                        ps.setDouble(4, Double.parseDouble(spinValorPvp.getValue().toString()));
                        ps.setInt(5, Integer.parseInt(txtCodProducto.getText()));
                        
                        ps.execute();
                        ps.close();
                    } catch (IOException ex) {
                        Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }catch(SQLException | NumberFormatException | HeadlessException x){
                    JOptionPane.showMessageDialog(rootPane, "Error al guardar la información de servicio"+x);
                }finally {
                    con.desconectar();
                }
                txtCodTipoProducto.setText("");
                txtCodProveedor.setText("");
                txtNombreComercial.setText("");
                spinValorPvp.setValue(0);
                txtPropiedad.setText("");
                txtProducto.setText("");
                txtProveedor.setText("");
                btnGuardarProducto.setEnabled(false);
                
                JOptionPane.showMessageDialog(rootPane,"Servicio guardado correctamente");
            }
            }else{
                if(txtNombreComercial.getText().equals("")||spinConcentracion.getValue().equals(0)||
                        cmbMedida.getSelectedItem().equals("Seleccione")||(txtCodTipoProducto.getText().equals("1")&&txtCodTipoProducto.getText().equals(""))
                        ||spinCantidad.getValue().equals(0)||txtCodProveedor.getText().equals("")
                        ||spinCostoProveedor.getValue().equals(0)||spinValorPvp.getValue().equals(0)||
                        txtCodProducto.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Debe ingresar toda la información",
                    "HE.ANDINO", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    try{
                        String insertarCategoria="UPDATE public.producto\n" +
"	SET idtipoproducto=?, idproveedor=?, nombre=?, propiedad=? || '' || '"+cmbMedida.getSelectedItem()+"', pvp=?, cantidad=?, costo=?\n" +
"	WHERE idproducto=?;";
                        try (PreparedStatement ps = con.conectar().prepareStatement(insertarCategoria)) {
                            ps.setInt(1, Integer.parseInt(txtCodTipoProducto.getText()));
                            ps.setInt(2, Integer.parseInt(txtCodProveedor.getText()));
                            ps.setString(3, txtNombreComercial.getText());
                            ps.setDouble(4, Double.parseDouble(spinConcentracion.getValue().toString()));
                            ps.setDouble(5, Double.parseDouble(spinValorPvp.getValue().toString()));
                            ps.setDouble(6, Double.parseDouble(spinCantidad.getValue().toString()));
                            ps.setDouble(7, Double.parseDouble(spinCostoProveedor.getValue().toString()));
                            ps.setInt(8, Integer.parseInt(txtCodProducto.getText()));

                            ps.execute();
                            ps.close();
                        } catch (IOException ex) {
                            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }catch(SQLException | NumberFormatException | HeadlessException x){
                        JOptionPane.showMessageDialog(rootPane, "Error al guardar la información de producto"+x);
                    }finally {
                        con.desconectar();
                    }
                    txtNombreComercial.setText("");
                    spinConcentracion.setValue(0);
                    cmbMedida.setSelectedItem("Seleccione");
                    cmbTipoProducto.setSelectedItem("Seleccione");
                    txtCodTipoProducto.setText("");
                    spinCantidad.setValue(0);
                    cmbProveedor.setSelectedItem("Seleccione");
                    txtCodProveedor.setText("");
                    spinCostoProveedor.setValue(0);
                    spinValorPvp.setValue(0);
                    txtPropiedad.setText("");
                    txtProducto.setText("");
                    txtProveedor.setText("");
                    btnGuardarProducto.setEnabled(false);
                    JOptionPane.showMessageDialog(rootPane,"Producto guardado correctamente");
                }
            }
        }
    }//GEN-LAST:event_btnGuardarProductoActionPerformed

    private void txtNombreComercialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreComercialFocusLost
        txtNombreComercial.setCaretPosition(0);
    }//GEN-LAST:event_txtNombreComercialFocusLost

    private void cmbTipoProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoProductoItemStateChanged
        Conexion con= new Conexion();
        String tipo = cmbTipoProducto.getSelectedItem().toString();
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT idtipoproducto, nombre FROM public.tipoproducto where nombre='"+tipo+"'";
        try {
            pst=con.conectar().prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                txtCodTipoProducto.setText(rs.getString("idtipoproducto"));
                txtProducto.setText(rs.getString("nombre"));
            }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener los datos",
                "HE.ANDINO", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmbTipoProductoItemStateChanged

    private void cmbProveedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProveedorItemStateChanged
        Conexion con= new Conexion();
        String tipo = cmbProveedor.getSelectedItem().toString();
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT idproveedor, nombre FROM public.proveedor where nombre='"+tipo+"'";
        try {
            pst=con.conectar().prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                txtCodProveedor.setText(rs.getString("idproveedor"));
                txtProveedor.setText(rs.getString("nombre"));
            }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener los datos",
                "HE.ANDINO", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cmbProveedorItemStateChanged

    private void tablaPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPacienteMouseClicked
        int selectedRowIndex = tablaPaciente.rowAtPoint(evt.getPoint());
        txtCodProducto.setText(tablaPaciente.getValueAt(selectedRowIndex, 0).toString());
        txtCodTipoProducto.setText(tablaPaciente.getValueAt(selectedRowIndex, 1).toString());
        txtProducto.setText(tablaPaciente.getValueAt(selectedRowIndex, 2).toString());
        txtCodProveedor.setText(tablaPaciente.getValueAt(selectedRowIndex, 3).toString());
        txtProveedor.setText(tablaPaciente.getValueAt(selectedRowIndex, 4).toString());
        txtNombreComercial.setText(tablaPaciente.getValueAt(selectedRowIndex, 5).toString());
        txtPropiedad.setText(tablaPaciente.getValueAt(selectedRowIndex, 6).toString());
        spinValorPvp.setValue(Double.parseDouble(tablaPaciente.getValueAt(selectedRowIndex, 7).toString()));
        spinCantidad.setValue(Double.parseDouble(tablaPaciente.getValueAt(selectedRowIndex, 8).toString()));
        spinCostoProveedor.setValue(Double.parseDouble(tablaPaciente.getValueAt(selectedRowIndex, 9).toString()));
        
        if(txtProducto.getText().equals("Servicio")){
            spinConcentracion.setEnabled(false);
            cmbMedida.setEnabled(false);
            spinCantidad.setEnabled(false);
            spinCostoProveedor.setEnabled(false);
            txtNombreComercial.setEnabled(true);
            cmbTipoProducto.setEnabled(true);
            cmbProveedor.setEnabled(true);
            spinValorPvp.setEnabled(true); 
            btnGuardarProducto.setEnabled(true);  
        }else{
            txtNombreComercial.setEnabled(true);
            spinConcentracion.setEnabled(true);
            cmbMedida.setEnabled(true);
            cmbTipoProducto.setEnabled(true);
            spinCantidad.setEnabled(true);
            cmbProveedor.setEnabled(true);
            spinCostoProveedor.setEnabled(true);
            spinValorPvp.setEnabled(true);        
            btnGuardarProducto.setEnabled(true);  
        }
    }//GEN-LAST:event_tablaPacienteMouseClicked

    private void txtBusquedaPacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaPacKeyTyped
        txtBusquedaPac.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBusquedaPac.getText());
                txtBusquedaPac.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tablaPaciente.getModel());
        tablaPaciente.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBusquedaPacKeyTyped

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        modelo.setRowCount( 0 );
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"producto.\"idproducto\", \n" +                    
"producto.\"idtipoproducto\", \n" +
"tipo.\"nombre\",\n" +
"producto.\"idproveedor\", \n" +
"proveedor.\"nombre\",\n" +
"producto.\"nombre\", \n" +
"producto.\"propiedad\", \n" +
"producto.\"pvp\", \n" +
"producto.\"cantidad\", \n" +
"producto.\"costo\"\n" +
"FROM public.\"producto\" producto INNER JOIN public.\"tipoproducto\" tipo ON\n" +
"producto.\"idtipoproducto\"=tipo.\"idtipoproducto\" INNER JOIN public.\"proveedor\" proveedor ON\n" +
"producto.\"idproveedor\"=proveedor.\"idproveedor\";");
                ResultSetMetaData md = rs.getMetaData();
                int columnCount = md.getColumnCount();
                String[] cols = new String[columnCount];
                for (int i=1;i<= columnCount;i++){
                    cols[i-1] = md.getColumnName(i);
                }
                while (rs.next()){
                    Object[] row = new Object[columnCount];
                    for (int i = 1 ; i <= columnCount ; i++){
                        row[i-1] = rs.getObject(i);
                    }
                    modelo.addRow(row);
                }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "HE.ANDINO", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmModificarProducto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardarProducto;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> cmbListarPac;
    private javax.swing.JComboBox<String> cmbMedida;
    private javax.swing.JComboBox<String> cmbProveedor;
    private javax.swing.JComboBox<String> cmbTipoProducto;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner spinCantidad;
    private javax.swing.JSpinner spinConcentracion;
    private javax.swing.JSpinner spinCostoProveedor;
    private javax.swing.JSpinner spinValorPvp;
    private javax.swing.JTable tablaPaciente;
    private javax.swing.JTextField txtBusquedaPac;
    private javax.swing.JTextField txtCodProducto;
    private javax.swing.JTextField txtCodProveedor;
    private javax.swing.JTextField txtCodTipoProducto;
    private javax.swing.JTextField txtNombreComercial;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtPropiedad;
    private javax.swing.JTextField txtProveedor;
    // End of variables declaration//GEN-END:variables
}
