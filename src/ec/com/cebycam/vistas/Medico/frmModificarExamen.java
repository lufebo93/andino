/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.cebycam.vistas.Medico;

import ec.com.cebycam.accesodatos.*;
import static ec.com.cebycam.vistas.Medico.frmPrincipal.txtMedicoWelcome;
import java.awt.HeadlessException;
import java.awt.event.*;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author lufeb
 */
public final class frmModificarExamen extends javax.swing.JInternalFrame {
    TableRowSorter trsFiltro;
    DefaultTableModel modelo;
    /**
     * Creates new form frmResetqa
     * @throws java.sql.SQLException
     * @throws java.io.IOException
     */
    public frmModificarExamen() throws SQLException, IOException{
        initComponents();
        cargarTabla();
        ordenarTabla();
        JRootPane boton = SwingUtilities.getRootPane(btnGuardar); 
        boton.setDefaultButton(btnGuardar);
        
        txtPara.setEnabled(false);
        txtContenido.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPaciente = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbListar = new javax.swing.JComboBox<>();
        txtBusqueda = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtContenido = new javax.swing.JTextArea();
        btnGuardar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblEdad = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        lblPara = new javax.swing.JLabel();
        txtPara = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIdExamen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMedicoExamen = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("CEBYCAM-CES :: Modificar Exámen");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png"))); // NOI18N

        lblPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaciente.setText("Paciente");

        lblFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFecha.setText("Fecha");

        txtPaciente.setEditable(false);

        txtFecha.setEditable(false);

        jInternalFrame1.setTitle("CEBYCAM-CES :: Pacientes");
        jInternalFrame1.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png")));
        jInternalFrame1.setVisible(true);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/refresh-0.png")));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        cmbListar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Exámen", "H.Clinica", "Paciente", "Fecha Atención" }));

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRefresh))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Agradeceré realizar"));

        txtContenido.setColumns(20);
        txtContenido.setLineWrap(true);
        txtContenido.setRows(5);
        txtContenido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContenidoKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtContenido);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/guardar_256px-2.png"))); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTitulo.setText("Nº Historia Clínica");

        txtCodigo.setEditable(false);
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblEdad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEdad.setText("Edad");

        txtEdad.setEditable(false);

        lblPara.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPara.setText("Para");

        txtPara.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParaKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID Exámen");

        txtIdExamen.setEditable(false);
        txtIdExamen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdExamen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Médico");

        txtMedicoExamen.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaciente)
                            .addComponent(lblEdad)
                            .addComponent(lblPara)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(lblFecha)
                                .addGap(18, 18, 18)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPara)
                            .addComponent(txtPaciente)
                            .addComponent(txtMedicoExamen))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(lblTitulo)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(txtIdExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(170, 170, 170)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaciente)
                    .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitulo)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdad)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecha)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPara)
                            .addComponent(txtPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMedicoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jInternalFrame1)))
                    .addComponent(btnGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void cargarTabla() throws SQLException, IOException{
        Conexion con = new Conexion();
        con.conectar();
        ResultSet rs = null;
        modelo = new DefaultTableModel();
        modelo.addColumn("Examen");
        modelo.addColumn("Médico");
        modelo.addColumn("H.Clinica");
        modelo.addColumn("Paciente");
        modelo.addColumn("Edad");
        modelo.addColumn("Fecha");
        modelo.addColumn("Contenido");
        modelo.addColumn("Para");
        
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"orden_de_examen.\"codigo\" as \"ID Exámen\",\n" +
"medico.\"nombre\" as Médico,\n" +
"historia_clinica.\"codigo\" as \"H.Clínica\", \n" +
"historia_clinica.\"paciente\", \n" +
"historia_clinica.\"edad\",\n" +
"atencion.\"fecha\", \n" +
"orden_de_examen.\"contenido\",\n" +
"orden_de_examen.\"para\"\n" +
"FROM \n" +
"public.\"historia clinica\" historia_clinica inner join public.\"atencion\" atencion on historia_clinica.\"codigo\"=atencion.\"historia clinica\" \n" +
"inner join public.\"medico\" medico on atencion.\"medico\"=medico.\"codigo\" inner join public.\"orden de examen\" orden_de_examen on atencion.\"codigo\"= orden_de_examen.\"atencion\""
                    + "where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Debe ingresar toda la información "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        }finally {
            con.desconectar();
            rs.close();
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
        
        tabla.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla.getColumnModel().getColumn(0).setMinWidth(0);
        tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmModificarExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        modelo.setRowCount( 0 );
        
        try{
            rs = con.ejecutarQuery("SELECT \n" +
"orden_de_examen.\"codigo\" as \"ID Exámen\",\n" +
"medico.\"nombre\" as Médico,\n" +
"historia_clinica.\"codigo\" as \"H.Clínica\", \n" +
"historia_clinica.\"paciente\", \n" +
"historia_clinica.\"edad\",\n" +
"atencion.\"fecha\", \n" +
"orden_de_examen.\"contenido\",\n" +
"orden_de_examen.\"para\"\n" +
"FROM \n" +
"public.\"historia clinica\" historia_clinica inner join public.\"atencion\" atencion on historia_clinica.\"codigo\"=atencion.\"historia clinica\" \n" +
"inner join public.\"medico\" medico on atencion.\"medico\"=medico.\"codigo\" inner join public.\"orden de examen\" orden_de_examen on atencion.\"codigo\"= orden_de_examen.\"atencion\""
                    + "where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Debe ingresar toda la información "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmModificarExamen.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmModificarExamen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
    }//GEN-LAST:event_btnRefreshActionPerformed
    
    public void ordenarTabla(){
        TableRowSorter<TableModel> ordenar = new TableRowSorter<>(modelo);
        tabla.setRowSorter(ordenar);
    }
    
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int selectedRowIndex = tabla.rowAtPoint(evt.getPoint());
        txtIdExamen.setText(tabla.getValueAt(selectedRowIndex, 0).toString());
        txtMedicoExamen.setText(tabla.getValueAt(selectedRowIndex, 1).toString());
        txtCodigo.setText(tabla.getValueAt(selectedRowIndex, 2).toString());
        txtPaciente.setText(tabla.getValueAt(selectedRowIndex, 3).toString());
        txtEdad.setText(tabla.getValueAt(selectedRowIndex, 4).toString());
        txtFecha.setText(tabla.getValueAt(selectedRowIndex, 5).toString());
        txtContenido.setText(tabla.getValueAt(selectedRowIndex, 6).toString());
        txtPara.setText(tabla.getValueAt(selectedRowIndex, 7).toString());
        
        txtPara.setEnabled(true);
        txtContenido.setEnabled(true);
    }//GEN-LAST:event_tablaMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Conexion con= new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmModificarExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (JOptionPane.showConfirmDialog(null, "¿Esta usted seguro?", "CEBYCAM-CES",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if(txtPara.getText().equals("")&&txtContenido.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe ingresar toda la información",
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        }else{
                try{
                    String sql="UPDATE public.\"orden de examen\"\n" +
    "   SET contenido=?, para=?\n" +
    " WHERE codigo="+Integer.parseInt(txtIdExamen.getText());

                    try (PreparedStatement ps = con.conectar().prepareStatement(sql)) {
                        ps.setString(1, txtContenido.getText());
                        ps.setString(2, txtPara.getText());
                        ps.execute();
                        ps.close();
                    } catch (IOException ex) {
                        Logger.getLogger(frmModificarExamen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(this, "Datos guardados correctamente...",
                            "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
                    txtPara.setText("");
                    txtContenido.setText("");

                    txtPara.setEnabled(false);
                    txtContenido.setEnabled(false);
                }catch(SQLException | NumberFormatException | HeadlessException x){
                        JOptionPane.showMessageDialog(rootPane, "Debe ingresar datos "+x);
                }finally {
                    con.desconectar();
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setToolTipText("Guardar"); 
    }//GEN-LAST:event_btnGuardarMouseEntered
    
    public void filtro() {
        int columnaABuscar = 0;
        if (cmbListar.getSelectedItem().equals("ID Exámen")) {
            columnaABuscar = 0;
        }
        if (cmbListar.getSelectedItem() == "Paciente") {
            columnaABuscar = 3;
        }
        if (cmbListar.getSelectedItem() == "H.Clinica") {
            columnaABuscar = 2;
        }
        if (cmbListar.getSelectedItem() == "Fecha Atención") {
            columnaABuscar = 5;
        }
        String replace = txtBusqueda.getText();
        replace = replace.replace("e", "(é)");
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i).*"+replace+".*", columnaABuscar));
        tabla.setRowSorter(trsFiltro);
    }
    
    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        txtBusqueda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBusqueda.getText());
                txtBusqueda.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tabla.getModel());
        tabla.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void txtParaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParaKeyTyped
        if(txtCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtParaKeyTyped

    private void txtContenidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContenidoKeyTyped
        if(txtCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtContenidoKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> cmbListar;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPara;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtBusqueda;
    public javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtContenido;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdExamen;
    private javax.swing.JTextField txtMedicoExamen;
    private javax.swing.JTextField txtPaciente;
    private javax.swing.JTextField txtPara;
    // End of variables declaration//GEN-END:variables
}
