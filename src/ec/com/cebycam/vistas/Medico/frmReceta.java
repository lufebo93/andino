/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.cebycam.vistas.Medico;

import ec.com.cebycam.accesodatos.Conexion;
import ec.com.cebycam.dao.impl.RecetaImp;
import static ec.com.cebycam.vistas.Medico.frmPrincipal.txtMedicoWelcome;
import java.awt.HeadlessException;
import java.awt.event.*;
import java.io.IOException;
import java.sql.*;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimplePdfExporterConfiguration;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author lufeb
 */
public final class frmReceta extends javax.swing.JInternalFrame {
    TableRowSorter trsFiltro;
    DefaultTableModel modelo;
    /**
     * Creates new form frmResetqa
     * @throws java.sql.SQLException
     * @throws java.io.IOException
     */
    public frmReceta() throws SQLException, IOException {
        initComponents();
        cargarTabla();
        ordenarTabla();
        JRootPane boton = SwingUtilities.getRootPane(btnGuardar); 
        boton.setDefaultButton(btnGuardar);
        jpcProximaCita.setEnabled(false);
        txtRp.setEnabled(false);
        txtIndicaciones.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPaciente = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbListar = new javax.swing.JComboBox<>();
        txtBusqueda = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRp = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtIndicaciones = new javax.swing.JTextArea();
        btnImprimir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        txtHistoriaClinica = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAtencion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMedicoAtencion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        jpcProximaCita = new org.jdesktop.swingx.JXDatePicker();

        setClosable(true);
        setIconifiable(true);
        setTitle("CEBYCAM-CES :: Recetas");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png"))); // NOI18N

        lblPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaciente.setText("Paciente:");

        lblFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFecha.setText("Atendido:");

        txtPaciente.setEditable(false);

        txtFecha.setEditable(false);

        jInternalFrame1.setTitle("CEBYCAM-CES :: Pacientes");
        jInternalFrame1.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png"))); // NOI18N
        jInternalFrame1.setVisible(true);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/refresh-0.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        cmbListar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "H.Cl√≠nica", "Paciente", "Medico" }));

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRefresh))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rp"));

        txtRp.setColumns(20);
        txtRp.setLineWrap(true);
        txtRp.setRows(5);
        txtRp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRpKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtRp);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Indicaciones"));

        txtIndicaciones.setColumns(20);
        txtIndicaciones.setLineWrap(true);
        txtIndicaciones.setRows(5);
        txtIndicaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIndicacionesKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtIndicaciones);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/imprimir.png"))); // NOI18N
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImprimirMouseEntered(evt);
            }
        });
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/guardar_256px-2.png"))); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTitulo.setText("N¬∫ Historia Cl√≠nica");

        txtHistoriaClinica.setEditable(false);
        txtHistoriaClinica.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHistoriaClinica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID Atenci√≥n");

        txtAtencion.setEditable(false);
        txtAtencion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAtencion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("M√©dico:");

        txtMedicoAtencion.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Pr√≥xima Cita:");

        txtCategoria.setEditable(false);
        txtCategoria.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCategoria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPaciente)
                        .addGap(49, 49, 49)
                        .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFecha)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpcProximaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMedicoAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHistoriaClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(txtAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaciente)
                            .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFecha)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMedicoAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jpcProximaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHistoriaClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addComponent(btnImprimir))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jInternalFrame1))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    

    public void cargarTabla() throws SQLException, IOException{
        Conexion con = new Conexion();
        con.conectar();
        ResultSet rs = null;
        modelo = new DefaultTableModel();
        modelo.addColumn("H.Cl√≠nica");
        modelo.addColumn("Paciente");
        modelo.addColumn("Medico");
        modelo.addColumn("Indicaciones");
        modelo.addColumn("Fecha de atencion");
        modelo.addColumn("Atencion");
        modelo.addColumn("Categoria");
        try{
            rs = con.ejecutarQuery("SELECT\n" +
"\"historia clinica\".codigo, \n" +
"\"historia clinica\".paciente,\n" +
"medico.nombre,\n" +
"atencion.prescripcion,\n" +
"atencion.fecha,\n" + 
"atencion.codigo, \n" +
"\"historia clinica\".categoria\n" +                    
"FROM \n" +
"public.\"historia clinica\" inner join public.atencion on \"historia clinica\".codigo=atencion.\"historia clinica\"\n" +
"inner join public.medico on atencion.medico=medico.codigo where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        }finally {
            con.desconectar();
            rs.close();
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
        
        tabla.getColumnModel().getColumn(5).setMaxWidth(0);
        tabla.getColumnModel().getColumn(5).setMinWidth(0);
        tabla.getColumnModel().getColumn(5).setPreferredWidth(0);
        
        tabla.getColumnModel().getColumn(6).setMaxWidth(0);
        tabla.getColumnModel().getColumn(6).setMinWidth(0);
        tabla.getColumnModel().getColumn(6).setPreferredWidth(0);
    }
    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        modelo.setRowCount( 0 );
        
        try{
            rs = con.ejecutarQuery("SELECT\n" +
"\"historia clinica\".codigo, \n" +
"\"historia clinica\".paciente,\n" +
"medico.nombre,\n" +
"atencion.prescripcion,\n" +
"atencion.fecha,\n" + 
"atencion.codigo, \n" +
"\"historia clinica\".categoria\n" +              
"FROM \n" +
"public.\"historia clinica\" inner join public.atencion on \"historia clinica\".codigo=atencion.\"historia clinica\"\n" +
"inner join public.medico on atencion.medico=medico.codigo where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
    }//GEN-LAST:event_btnRefreshActionPerformed

    public void ordenarTabla(){
        TableRowSorter<TableModel> ordenar = new TableRowSorter<>(modelo);
        tabla.setRowSorter(ordenar);
    }
    
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int selectedRowIndex = tabla.rowAtPoint(evt.getPoint());
        txtHistoriaClinica.setText(tabla.getValueAt(selectedRowIndex, 0).toString());
        txtPaciente.setText(tabla.getValueAt(selectedRowIndex, 1).toString());
        txtMedicoAtencion.setText(tabla.getValueAt(selectedRowIndex,2).toString());
        txtIndicaciones.setText(tabla.getValueAt(selectedRowIndex, 3).toString());
        txtFecha.setText(tabla.getValueAt(selectedRowIndex, 4).toString());
        txtAtencion.setText(tabla.getValueAt(selectedRowIndex, 5).toString());
        txtCategoria.setText(tabla.getValueAt(selectedRowIndex, 6).toString());
        
        jpcProximaCita.setEnabled(true);
        txtRp.setEnabled(true);
    }//GEN-LAST:event_tablaMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Conexion con= new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (JOptionPane.showConfirmDialog(null, "¬øEsta usted seguro?", "CEBYCAM-CES",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if(txtPaciente.getText().equals("")||txtFecha.getText().equals("")
                    ||txtHistoriaClinica.getText().equals("")||txtRp.getText().equals("")
                    ||txtIndicaciones.getText().equals("")
                    ||txtAtencion.getText().equals("")||jpcProximaCita.getDate()==null){
            JOptionPane.showMessageDialog(this, "Datos incompletos",
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            }else{
                RecetaImp imp = new RecetaImp();
                try {
                    if(imp.Check()==1){
                        JOptionPane.showMessageDialog(this, "Ya existe una receta emitida anteriormente",
                                "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
                        txtRp.setText("");
                    }else{
                        try{
                            String sql="INSERT INTO public.receta(\n" +
                                    "            rp, atencion, cita)\n" +
                                    "    VALUES (?, ?, ?);";
                            
                            try (PreparedStatement ps = con.conectar().prepareStatement(sql)) {
                                ps.setString(1, txtRp.getText());
                                ps.setInt(2, Integer.parseInt(txtAtencion.getText()));
                                ps.setDate(3, new java.sql.Date(jpcProximaCita.getDate().getTime()));
                                ps.execute();
                                ps.close();
                            }
                            
                            JOptionPane.showMessageDialog(rootPane,"Guardado correctamente");
                        }catch(SQLException | NumberFormatException | HeadlessException x){
                            JOptionPane.showMessageDialog(rootPane, "No se pudo guardar la informaci√≥n "+x);
                        }finally {
                            con.desconectar();
                        }
                    }
                } catch (SQLException ex) { 
                    JOptionPane.showMessageDialog(rootPane, "Debe ingresar datos "+ex);
                } catch (IOException ex) {
                    Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setToolTipText("Guardar"); 
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnImprimirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseEntered
        btnImprimir.setToolTipText("Imprimir"); 
    }//GEN-LAST:event_btnImprimirMouseEntered

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        if(txtPaciente.getText().equals("")||txtFecha.getText().equals("")
                ||txtHistoriaClinica.getText().equals("")
                ||txtAtencion.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente",
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        }else{
            RecetaImp imp = new RecetaImp();
            try {
                if(imp.Check()==1){
                    try{
                        String fileName = "ReporteRecetas.jasper";
                        String sql="SELECT\n" +
                                "    receta.\"rp\" as rp,\n" +
                                "    atencion.\"prescripcion\" as indicaciones,\n" +
                                "    receta.\"cita\" as cita,\n" +
                                "    historia_clinica.\"paciente\" AS historia_clinica_paciente, \n" +
                                "    atencion.\"fecha\" AS atencion_fecha,\n" +
                                "    medico.\"nombre\" as nombre_medico\n" +
                                "    FROM \n" +
                                "    public.\"receta\" receta inner join public.\"atencion\" atencion on receta.\"atencion\"=atencion.\"codigo\" inner join public.\"historia clinica\" historia_clinica on atencion.\"historia clinica\"=historia_clinica.\"codigo\"\n" +
                                "    inner join public.\"medico\" medico on atencion.\"medico\"=medico.\"codigo\" where historia_clinica.\"codigo\"='"+Integer.parseInt(txtHistoriaClinica.getText())+"' and atencion.\"codigo\"='"+Integer.parseInt(txtAtencion.getText())+"';";
                        rs = con.ejecutarQuery(sql);
                        JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(rs);
                        JasperPrint jasperPrint=JasperFillManager.fillReport(fileName, new HashMap(), resultSetDataSource);
                        JasperViewer viever = new JasperViewer(jasperPrint,false);
                        viever.setTitle("Vista Preliminar");
                        viever.setIconImage(new ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png")).getImage());
                        viever.setVisible(true);
                        
                        JRPdfExporter exporter = new JRPdfExporter();
                        exporter.setExporterInput(new SimpleExporterInput(jasperPrint));
                        SimplePdfExporterConfiguration configuration = new SimplePdfExporterConfiguration();
                        exporter.setConfiguration(configuration);
                    }catch (NumberFormatException | JRException e){
                        JOptionPane.showMessageDialog(this, "No ha seleccionado la informaci√≥n del paciente "+e,
                                "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
                    }finally {
                        con.desconectar();
                        rs.close();
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "No ha emitido una receta al paciente seleccionado",
                            "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar datos "+ex);
            } catch (IOException ex) {
                Logger.getLogger(frmReceta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnImprimirActionPerformed
    
    public void filtro() {
        int columnaABuscar = 0;
        if (cmbListar.getSelectedItem().equals("H.Cl√≠nica")) {
            columnaABuscar = 0;
        }
        if (cmbListar.getSelectedItem() == "Paciente") {
            columnaABuscar = 1;
        }
        if (cmbListar.getSelectedItem() == "Medico") {
            columnaABuscar = 2;
        }
        String replace = txtBusqueda.getText();
        replace = replace.replace("e", "(√©)");
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i).*"+replace+".*", columnaABuscar));
        tabla.setRowSorter(trsFiltro);
    }
    
    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        txtBusqueda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBusqueda.getText());
                txtBusqueda.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tabla.getModel());
        tabla.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void txtRpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRpKeyTyped
        if(txtHistoriaClinica.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtRpKeyTyped

    private void txtIndicacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIndicacionesKeyTyped
        if(txtHistoriaClinica.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtIndicacionesKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> cmbListar;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXDatePicker jpcProximaCita;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tabla;
    public static javax.swing.JTextField txtAtencion;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtFecha;
    public javax.swing.JTextField txtHistoriaClinica;
    private javax.swing.JTextArea txtIndicaciones;
    private javax.swing.JTextField txtMedicoAtencion;
    private javax.swing.JTextField txtPaciente;
    private javax.swing.JTextArea txtRp;
    // End of variables declaration//GEN-END:variables
}
