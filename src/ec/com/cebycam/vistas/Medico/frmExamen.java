/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.cebycam.vistas.Medico;

import ec.com.cebycam.accesodatos.Conexion;
import static ec.com.cebycam.vistas.Medico.frmPrincipal.txtMedicoWelcome;
import java.awt.HeadlessException;
import java.awt.event.*;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author lufeb
 */
public final class frmExamen extends javax.swing.JInternalFrame {
    TableRowSorter trsFiltro;
    DefaultTableModel modelo;
    /**
     * Creates new form frmResetqa
     * @throws java.sql.SQLException
     * @throws java.io.IOException
     */
    public frmExamen() throws SQLException, IOException {
        initComponents();
        cargarTabla();
        ordenarTabla();
        JRootPane boton = SwingUtilities.getRootPane(btnGuardar); 
        boton.setDefaultButton(btnGuardar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPaciente = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbListar = new javax.swing.JComboBox<>();
        txtBusqueda = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtContenido = new javax.swing.JTextArea();
        btnImprimir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblEdad = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        lblPara = new javax.swing.JLabel();
        txtPara = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAtencion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMedicoExamen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiagnostico = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("CEBYCAM-CES :: Exámenes");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png"))); // NOI18N

        lblPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaciente.setText("Paciente");

        lblFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFecha.setText("Fecha");

        txtPaciente.setEditable(false);

        txtFecha.setEditable(false);

        jInternalFrame1.setTitle("CEBYCAM-CES :: Pacientes");
        jInternalFrame1.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/icono.png"))); // NOI18N
        jInternalFrame1.setVisible(true);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla.setAutoscrolls(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/refresh-0.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        cmbListar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "H.Clínica", "Paciente", "Médico" }));

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefresh)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Agradeceré realizar"));

        txtContenido.setColumns(20);
        txtContenido.setLineWrap(true);
        txtContenido.setRows(5);
        txtContenido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContenidoKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtContenido);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/listar_256px-0.png"))); // NOI18N
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImprimirMouseEntered(evt);
            }
        });
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/com/cebycam/imagenes/guardar_256px-2.png"))); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTitulo.setText("Nº Historia Clínica");

        txtCodigo.setEditable(false);
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblEdad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEdad.setText("Edad");

        txtEdad.setEditable(false);

        lblPara.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPara.setText("Para");

        txtPara.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParaKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID Atención");

        txtAtencion.setEditable(false);
        txtAtencion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAtencion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Ver Exámenes");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Médico");

        txtMedicoExamen.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Diagnóstico");

        txtDiagnostico.setEditable(false);

        txtCategoria.setEditable(false);
        txtCategoria.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCategoria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaciente)
                            .addComponent(lblEdad))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lblFecha)
                                .addGap(18, 18, 18)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTitulo)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigo)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(txtAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(47, 47, 47)
                                .addComponent(txtMedicoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPara)
                                .addGap(62, 62, 62)
                                .addComponent(txtPara, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(93, 501, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtMedicoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPaciente)
                                        .addGap(14, 14, 14)
                                        .addComponent(lblEdad))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblFecha)
                                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblTitulo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(lblPara))
                                    .addComponent(txtPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addGap(9, 9, 9)
                                .addComponent(txtAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jInternalFrame1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void cargarTabla() throws SQLException, IOException{
        Conexion con = new Conexion();
        con.conectar();
        ResultSet rs = null;
        modelo = new DefaultTableModel();
        modelo.addColumn("Médico");
        modelo.addColumn("H.Clínica");
        modelo.addColumn("Paciente");
        modelo.addColumn("Edad");
        modelo.addColumn("Fecha de atencion");
        modelo.addColumn("Diagnostico");
        modelo.addColumn("ID Atencion");
        modelo.addColumn("Categoria");
        try{
            rs = con.ejecutarQuery("SELECT\n" +
"medico.\"nombre\", \n" +
"\"historia clinica\".\"codigo\" as \"H.Clínica\", \n" +
"\"historia clinica\".\"paciente\",\n" +
"\"historia clinica\".\"edad\", \n" +
"atencion.\"fecha\",\n" +
"atencion.\"diagnostico\", \n" +
"atencion.\"codigo\" as \"ID Atención\", \n" +
"\"historia clinica\".\"categoria\" \n" +                    
"FROM \n" +
"public.\"historia clinica\" inner join public.atencion on \"historia clinica\".codigo=atencion.\"historia clinica\" \n" +
"inner join public.\"medico\" medico on atencion.\"medico\"=medico.\"codigo\" where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error: "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        }finally {
            con.desconectar();
            rs.close();
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
        
        tabla.getColumnModel().getColumn(6).setMaxWidth(0);
        tabla.getColumnModel().getColumn(6).setMinWidth(0);
        tabla.getColumnModel().getColumn(6).setPreferredWidth(0);
        
        tabla.getColumnModel().getColumn(7).setMaxWidth(0);
        tabla.getColumnModel().getColumn(7).setMinWidth(0);
        tabla.getColumnModel().getColumn(7).setPreferredWidth(0);
    }
    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        modelo.setRowCount( 0 );
        
        try{
            rs = con.ejecutarQuery("SELECT\n" +
"medico.\"nombre\", \n" +
"\"historia clinica\".\"codigo\" as \"H.Clínica\", \n" +
"\"historia clinica\".\"paciente\",\n" +
"\"historia clinica\".\"edad\", \n" +
"atencion.\"fecha\",\n" +
"atencion.\"diagnostico\", \n" +
"atencion.\"codigo\" as \"ID Atención\", \n" +
"\"historia clinica\".\"categoria\" \n" +                    
"FROM \n" +
"public.\"historia clinica\" inner join public.atencion on \"historia clinica\".codigo=atencion.\"historia clinica\" \n" +
"inner join public.\"medico\" medico on atencion.\"medico\"=medico.\"codigo\"; where medico.\"nombre\"='"+txtMedicoWelcome.getText()+"';");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            String[] cols = new String[columnCount];
            for (int i=1;i<= columnCount;i++){
                cols[i-1] = md.getColumnName(i);
            }
            while (rs.next()){
                Object[] row = new Object[columnCount];
                for (int i = 1 ; i <= columnCount ; i++){
                    row[i-1] = rs.getObject(i);
                }
                modelo.addRow(row);
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error: "+e,
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            con.desconectar();
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tabla.setModel(modelo);
        modelo.fireTableDataChanged();
    }//GEN-LAST:event_btnRefreshActionPerformed
    
    public void ordenarTabla(){
        TableRowSorter<TableModel> ordenar = new TableRowSorter<>(modelo);
        tabla.setRowSorter(ordenar);
    }
    
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int selectedRowIndex = tabla.rowAtPoint(evt.getPoint());
        txtMedicoExamen.setText(tabla.getValueAt(selectedRowIndex, 0).toString());
        txtCodigo.setText(tabla.getValueAt(selectedRowIndex, 1).toString());
        txtPaciente.setText(tabla.getValueAt(selectedRowIndex, 2).toString());
        txtEdad.setText(tabla.getValueAt(selectedRowIndex, 3).toString());
        txtFecha.setText(tabla.getValueAt(selectedRowIndex, 4).toString());
        txtDiagnostico.setText(tabla.getValueAt(selectedRowIndex, 5).toString());
        txtAtencion.setText(tabla.getValueAt(selectedRowIndex, 6).toString());
        txtCategoria.setText(tabla.getValueAt(selectedRowIndex, 7).toString());
    }//GEN-LAST:event_tablaMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Conexion con= new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (JOptionPane.showConfirmDialog(null, "¿Esta usted seguro?", "CEBYCAM-CES",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if(txtPaciente.getText().equals("")||txtFecha.getText().equals("")
                    ||txtCodigo.getText().equals("")||txtEdad.getText().equals("")
                    ||txtPara.getText().equals("")||txtContenido.getText().equals("")
                    ||txtAtencion.getText().equals("")||txtDiagnostico.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe ingresar toda la información",
                    "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            }else{
                try{
                    String sql="INSERT INTO public.\"orden de examen\"(\n" +
                    "            contenido, para, atencion)\n" +
                    "    VALUES (?, ?, ?);";

                    try (PreparedStatement ps = con.conectar().prepareStatement(sql)) {
                        ps.setString(1, txtContenido.getText());
                        ps.setString(2, txtPara.getText());
                        ps.setInt(3, Integer.parseInt(txtAtencion.getText()));
                        ps.execute();
                        ps.close();
                    } catch (IOException ex) {
                        Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(rootPane,"Guardado correctamente");
                }catch(SQLException | NumberFormatException | HeadlessException x){
                    JOptionPane.showMessageDialog(rootPane, "No se pudo guardar la información "+x);
                }finally {
                    con.desconectar();
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setToolTipText("Guardar"); 
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnImprimirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseEntered
        btnImprimir.setToolTipText("Imprimir"); 
    }//GEN-LAST:event_btnImprimirMouseEntered

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Conexion con = new Conexion();
        try {
            con.conectar();
        } catch (IOException ex) {
            Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmImpresionExamen frm = null;
        try {
            frm = new frmImpresionExamen();
        } catch (SQLException | IOException ex) {
            Logger.getLogger(frmExamen.class.getName()).log(Level.SEVERE, null, ex);
        }
        frm.setVisible(true);
    }//GEN-LAST:event_btnImprimirActionPerformed
    
    public void filtro() {
        int columnaABuscar = 0;
        if (cmbListar.getSelectedItem().equals("H.Clínica")) {
            columnaABuscar = 1;
        }
        if (cmbListar.getSelectedItem() == "Paciente") {
            columnaABuscar = 2;
        }
        if (cmbListar.getSelectedItem() == "Médico") {
            columnaABuscar = 0;
        }
        String replace = txtBusqueda.getText();
        replace = replace.replace("e", "(é)");
        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i).*"+replace+".*", columnaABuscar));
        tabla.setRowSorter(trsFiltro);
    }
    
    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        txtBusqueda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtBusqueda.getText());
                txtBusqueda.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tabla.getModel());
        tabla.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void txtParaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParaKeyTyped
        if(txtCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtParaKeyTyped

    private void txtContenidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContenidoKeyTyped
        if(txtCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Debe escoger un paciente de la tabla",
                        "CEBYCAM-CES", JOptionPane.INFORMATION_MESSAGE);
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); 
            }
        }
    }//GEN-LAST:event_txtContenidoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> cmbListar;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPara;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tabla;
    public static javax.swing.JTextField txtAtencion;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCategoria;
    public javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtContenido;
    private javax.swing.JTextField txtDiagnostico;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtMedicoExamen;
    private javax.swing.JTextField txtPaciente;
    private javax.swing.JTextField txtPara;
    // End of variables declaration//GEN-END:variables
}
